<!DOCTYPE html>
<html lang="kk">
<head>
  <meta charset="UTF-8">
  <title>–§–∏–∑–∏–∫–∞ Pao-Pao –æ–π—ã–Ω—ã</title>
  <style>
    body {
      margin: 0;
      padding: 0;
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      background: linear-gradient(135deg, #d9f1ff, #ffffff);
      font-family: Arial, sans-serif;
      color: #222;
    }
    .game-container {
      width: 90%;
      max-width: 800px;
      text-align: center;
    }
    h1 {
      margin-bottom: 10px;
    }
    #board {
      display: grid;
      grid-template-columns: repeat(6, 100px);
      grid-gap: 10px;
      justify-content: center;
      margin: 20px auto;
    }
    .card {
      width: 100px;
      height: 100px;
      background: #ffffff;
      border: 2px solid #007acc;
      border-radius: 12px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 14px;
      font-weight: bold;
      cursor: pointer;
      user-select: none;
      transition: transform 0.2s;
      box-shadow: 0 6px 12px rgba(0,0,0,0.08);
    }
    .card.open {
      background: #007acc;
      color: #fff;
      transform: scale(1.05);
    }
    .info {
      margin: 10px 0;
    }
    button {
      margin: 5px;
      padding: 8px 16px;
      border: none;
      border-radius: 8px;
      background: #007acc;
      color: #fff;
      font-size: 14px;
      cursor: pointer;
    }
    button:hover {
      background: #005fa3;
    }
    @media (max-width:600px){
      #board { grid-template-columns: repeat(3, 100px); }
      .card { width: 86px; height: 86px; font-size: 12px; }
    }
  </style>
</head>
<body>
  <div class="game-container">
    <h1>‚ö° –§–∏–∑–∏–∫–∞ Pao-Pao</h1>
    <div class="info">
      <span id="score">“∞–ø–∞–π: 0</span> | 
      <span id="timer">–£–∞“õ—ã—Ç: 120</span> —Å–µ–∫
    </div>
    <div>
      <button onclick="startGame(6,120)">–û“£–∞–π (6 –∂“±–ø)</button>
      <button onclick="startGame(9,150)">–û—Ä—Ç–∞ (9 –∂“±–ø)</button>
      <button onclick="startGame(12,210)">“ö–∏—ã–Ω (12 –∂“±–ø)</button>
    </div>
    <div id="board"></div>
  </div>

  <script>
    const pairs = [
      ["F=ma", "–ö“Ø—à –º–∞—Å—Å–∞—Å—ã –º–µ–Ω “Ø–¥–µ—É–≥–µ —Ç”ô—É–µ–ª–¥—ñ"],
      ["E=mc¬≤", "–≠–Ω–µ—Ä–≥–∏—è –º–µ–Ω –º–∞—Å—Å–∞ –±–∞–π–ª–∞–Ω—ã—Å—ã"],
      ["p=m¬∑v", "–ò–º–ø—É–ª—å—Å —Ñ–æ—Ä–º—É–ª–∞—Åƒ±"],
      ["œÅ=m/V", "–¢—ã“ì—ã–∑–¥—ã“õ –∞–Ω—ã“õ—Ç–∞–º–∞—Å—ã"],
      ["A=F¬∑s", "–ñ“±–º—ã—Å —Ñ–æ—Ä–º—É–ª–∞—Å—ã"],
      ["P=W/t", "“ö—É–∞—Ç —Ñ–æ—Ä–º—É–ª–∞—Å—ã"],
      ["I=U/R", "–û–º –∑–∞“£—ã"],
      ["Q=cmŒîT", "–ñ—ã–ª—É –º”©–ª—à–µ—Ä—ñ"],
      ["v=s/t", "–ñ—ã–ª–¥–∞–º–¥—ã“õ"],
      ["Œª=v/f", "–¢–æ–ª“õ—ã–Ω “±–∑—ã–Ω–¥—ã“ì—ã"],
      ["g‚âà9.8 –º/—Å¬≤", "–ñ–µ—Ä–¥—ñ“£ —Ç–∞—Ä—Ç—ã–ª—ã—Å “Ø–¥–µ—É—ñ"],
      ["p=F/S", "“ö—ã—Å—ã–º —Ñ–æ—Ä–º—É–ª–∞—Å—ã"]
    ];

    let opened = [];
    let matched = 0;
    let score = 0;
    let timer;
    let timeLeft = 0;

    function startGame(numPairs, time) {
      clearInterval(timer);
      const selected = pairs.slice(0, numPairs);
      let cards = [];
      selected.forEach(p => {
        cards.push({text: p[0], id: p[0]});
        cards.push({text: p[1], id: p[0]});
      });
      cards = shuffle(cards);
      const board = document.getElementById("board");
      board.innerHTML = "";
      board.style.gridTemplateColumns = `repeat(${Math.min(6,numPairs)}, 100px)`;
      cards.forEach((c, i) => {
        const card = document.createElement("div");
        card.className = "card";
        card.dataset.id = c.id;
        card.dataset.index = i;
        card.innerText = "?";
        card.onclick = () => flipCard(card, c.text);
        board.appendChild(card);
      });
      opened = [];
      matched = 0;
      score = 0;
      document.getElementById("score").innerText = "“∞–ø–∞–π: " + score;
      timeLeft = time;
      document.getElementById("timer").innerText = "–£–∞“õ—ã—Ç: " + timeLeft;
      timer = setInterval(()=>{
        timeLeft--;
        document.getElementById("timer").innerText = "–£–∞“õ—ã—Ç: " + timeLeft;
        if(timeLeft<=0){
          clearInterval(timer);
          alert("‚è∞ –£–∞“õ—ã—Ç –±—ñ—Ç—Ç—ñ! –ñ–∏–Ω–∞“ì–∞–Ω “±–ø–∞–π: "+score);
        }
      },1000);
    }

    function flipCard(card, text) {
      if (card.classList.contains("open")) return;
      card.classList.add("open");
      card.innerText = text;
      opened.push(card);
      if (opened.length===2) {
        setTimeout(checkMatch,500);
      }
    }

    function checkMatch() {
      const [c1,c2] = opened;
      if (c1.dataset.id===c2.dataset.id && c1.dataset.index!==c2.dataset.index) {
        score += 10;
        matched++;
        // keep open
      } else {
        score -= 5;
        c1.classList.remove("open");
        c2.classList.remove("open");
        c1.innerText = "?";
        c2.innerText = "?";
      }
      document.getElementById("score").innerText = "“∞–ø–∞–π: "+score;
      opened = [];
      if (matched===document.getElementById("board").children.length/2) {
        clearInterval(timer);
        alert("üéâ “ö“±—Ç—Ç—ã“õ—Ç–∞–π–º—ã–∑! –ë–∞—Ä–ª—ã“õ –∂“±–ø —Ç–∞–±—ã–ª–¥—ã. “∞–ø–∞–π: "+score);
      }
    }

    function shuffle(arr) {
      for (let i=arr.length-1;i>0;i--){
        const j = Math.floor(Math.random()*(i+1));
        [arr[i],arr[j]]=[arr[j],arr[i]];
      }
      return arr;
    }
  </script>
</body>
</html>
